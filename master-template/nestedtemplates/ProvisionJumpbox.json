{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "group": "Template settings",
        "description": "The name of the administrator account of the new VMs and Domain"
      },
      "defaultValue": ""
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "group": "Template settings",
        "description": "The password for the administrator account of the new VMs and Domain"
      }
    },    
    "domainAdminUsername": {
      "type": "string",
      "metadata": {
        "group": "Template settings",
        "description": "The name of the administrator account of the new VMs and Domain"
      },
      "defaultValue": ""
    },
    "domainname": {
      "type": "string",
      "metadata": {
        "group": "Template settings",
        "description": ""
      }
    },
    "domainNetbiosName": {
      "type": "string",
      "metadata": {
        "group": "Template settings",
        "description": ""
      }
    },
    "domainNameDMZ": {
      "type": "string",
      "metadata": {
        "group": "Template settings",
        "description": ""
      }
    },
    "domainNetbiosNameDMZ": {
      "type": "string",
      "metadata": {
        "group": "Template settings",
        "description": ""
      }
    },
    "ArtifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/CIThunderChicken/ThunderChicken/servicemodular/service-template",
      "metadata": {
        "group": "Template settings",
        "description": "Location of the artifacts"
      }
    },
    "ArtifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Template settings",
        "description": "The sasToken required to access ArtifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    
    "githubUsername": {
      "type": "string",
      "defaultValue": "",   
      "metadata": {
        "group": "JumbBox Github settings",
        "description": "UserName for Github connection"
      }
    },  
    "githubToken": {
      "type": "string",
      "defaultValue": "",   
      "metadata": {
        "group": "JumbBox Github settings",
        "description": "Token for Github connection"
      }
    },
    "githubUrl": {
      "type": "string",
      "defaultValue": "",   
      "metadata": {
        "group": "JumbBox Github settings",
        "description": "Base Url for Github connection"
      }
    },
    "DiskSizes": {
      "type": "string",     
      "allowedValues": [
        "Small-4GB",
        "Medium-20GB",
        "Large-50GB",        
        "Default"
      ],
      "metadata": {
        "group": "Template Settings",
        "description": "Builds virtual machine to T-Shirt size: Small: 1 Core, Medium:4 Core: Large: 8 Cores, Default: Attach individual disks for each drive letter and very costly"
      }
    },
    "OSDiskSize": {
      "type": "string",
      "allowedValues": [
        "Small-30GB",
        "Regular-127GB"
      ],
      "metadata": {
        "group": "Template Settings",
        "description": "Defines VMs OS disk size "
      }
    },
    "VMSeries": {
      "type": "string",
      "metadata": {
        "group": "Template Settings",
        "description": "Defines VM Series - CPU and memory allocation"
      }
    },
    "AutoShutdown": {
      "type": "string",
      "allowedValues": [
        "1200",
        "1300",
        "1400",
        "1500",
        "1600",
        "1700",
        "1800",
        "1900",
        "2000"
      ],
      "metadata": {
        "group": "Template Settings",
        "description": "Daily Auto Shutdown time"
      }
    }
  },
  "variables": {
    "templatePrefix": "master",
    "location": "[resourceGroup().location]",
    "storageAccountNamePrefix": "[concat(variables('templatePrefix'), uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat(variables('templatePrefix'), '-vn')]",
    "VSubnetName": "vs",
    "KSubnetName": "ks",
    "CSubnetName": "cs",
    "jumpBoxVmName": "JumpBox",
    "publicIPAddressName": "[concat(variables('templatePrefix'), '-', variables('jumpBoxVmName'), '-publicip')]",
    "dnsPrefix": "[concat('dns',uniqueString(resourceGroup().id))]",
    "jumpBoxNic": "[concat(variables('templatePrefix'), '-', variables('jumpBoxVmName'), '-nic')]",
    "virtualMachineSize": "Standard_B2s",
    "virtualMachineSizeArraySeries": {
      "Bs-Series": {
        "S": "Standard_B2s",
        "M": "Standard_B2ms",
        "L": "Standard_B4ms",
        "XL": "Standard_B8ms"
      },
      "Dv2-Series": {
        "S": "Standard_D1_v2",
        "M": "Standard_D2_v2",
        "L": "Standard_D3_v2",
        "XL": "Standard_D4_v2"
      },
      "Dv3-Series": {
        "S": "Standard_D1_v2",
        "M": "Standard_D2_v3",
        "L": "Standard_D4_v3",
        "XL": "Standard_D8_v3"
      }
    },
    "dscModulePrepare": {
      "url": "[concat(parameters('ArtifactsLocation'),'/','dsc','/','PrepareVms.ps1.zip')]",
      "script": "PrepareVms.ps1",
      "function": "PrepareVms"
    },
    "setupConfig": {
      "url": "[concat(parameters('ArtifactsLocation'),'/','scripts','/','JumbBoxSetup.ps1')]"
    },
    "vmDscSettings": {
      "DiskSizes": "Small-4GB",
      "DisksizeGB": 4,      
      "domainName": "[parameters('domainName')]",
      "domainNetbiosName": "[parameters('domainNetbiosName')]",      
      "domainNameDMZ": "[parameters('domainName')]",
      "domainNetbiosNameDMZ": "[parameters('domainNetbiosName')]",      
      "dns": "10.0.0.5",
      "RetryCount": 600,
      "RetryIntervalSec": 60,
      "datadisks": []
    },
    "_packages" : ["sql-server-management-studio","rsat"],    
    "ConfigData": {
      "ClientInstallPath"  : "\\\\KD201\\Share\\Client",
      "DestinationPath"    : "C:\\INSTALL\\Client",
      "InstallOffice"      : true,    
      "Packages"  : [ 
        "vscode",
        "git",
        "Git-Credential-Manager-for-Windows",
        "poshgit",
        "pester",
        "vscode-powershell",
        "googlechrome"
        ],
      "GitRepositories"  : [ 
        "CI.Common"
      ],
      "GithubUsername":  "[parameters('GithubUsername')]",
      "GithubToken":  "[parameters('GithubToken')]",
      "GithubUrl":  "[parameters('GithubUrl')]"  
    },
    "_imagesskus": [ 
      "Get-AzureRmVMImageOffer -Location 'East US' -PublisherName 'MicrosoftWindowsDesktop' | Select Offer",
      "Get-AzureRmVMImage -Location 'East US' -PublisherName 'MicrosoftWindowsDesktop' -Offer 'Windows-10' -Sku 'rs5-enterprise' | Select Version",
      "Get-AzureRmVMImageSku -Location 'East US' -PublisherName 'MicrosoftWindowsDesktop' -Offer 'Windows-10' | Select Skus"
    ],
    "imageReference": {
      "Windows10" : {
        "publisher": "MicrosoftWindowsDesktop",
        "offer": "Windows-10",
        "sku": "rs5-pro",
        "version": "latest"
      },    
      "Windows2016": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2016-Datacenter-smalldisk",
        "version": "latest"
      }
    }

  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "tags": {
        "Service": "JumpBox",
        "Site": "[ variables('VSubnetName') ]"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsPrefix')]"
        }
      }
    },
    {
      "name": "[variables('jumpBoxNic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-06-01",
      "location": "[variables('location')]",
      "tags": {
        "Service": "JumpBox",
        "Site": "[ variables('VSubnetName') ]"
      },
      "comments": "Jump Box NIC",
      "dependsOn": [
        "[variables('publicIPAddressName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'),variables('VSubnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('jumpBoxVmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "location": "[variables('location')]",
      "tags": {
        "Service": "JumpBox",
        "Site": "[variables('VSubnetName')]"
      },
      "comments": "This is Jumpbox you are going to RDP to connects each machine.",
      "dependsOn": [
        "[variables('jumpBoxNic')]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('jumpBoxVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",          
          "windowsConfiguration": {
            "provisionVmAgent": "true",
            "TimeZone": "Pacific Standard Time"
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSizeArraySeries')[parameters('VMSeries')].M]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')['Windows2016']]",
          "osDisk": {
            "name": "[concat(variables('jumpBoxVmName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('jumpBoxNic'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNamePrefix')), '2017-06-01').primaryEndpoints['blob']]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "[providers('Microsoft.DevTestLab','labs').apiVersions[0]]",
          "type": "microsoft.devtestlab/schedules",
          "name": "[concat('shutdown-computevm-',variables('jumpBoxVmName'))]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('jumpBoxVmName'))]"
          ],
          "properties": {
            "status": "Enabled",
            "taskType": "ComputeVmShutdownTask",
            "dailyRecurrence": {
              "time": "[parameters('AutoShutdown')]"
            },
            "timeZoneId": "Pacific Standard Time",
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 15
            },
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('jumpBoxVmName'))]"
          }
        },
        {
          "type": "extensions",
          "name": "Microsoft.Powershell.DSC",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('jumpBoxVmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.20",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[variables('dscModulePrepare').url]",
                "script": "[variables('dscModulePrepare').script]",
                "function": "[variables('dscModulePrepare').function]"
              },
              "configurationArguments": {
                "DiskSize": "[parameters('DiskSizes')]",
                "DisksizeGB": "[int(variables('vmDscSettings').DisksizeGB)]",
                "domainName": "[variables('vmDscSettings').domainName]",
                "domainNetbiosName": "[variables('vmDscSettings').domainNetbiosName]",
                "dnsServer": "[variables('vmDscSettings').dns]",
                "dataDisks": "[string(variables('vmDscSettings').datadisks)]",
                "joinDomain" : true,
                "ConfigData": "[string(variables('ConfigData'))]",                
                "retryCount": "[int(variables('vmDscSettings').RetryCount)]",
                "retryIntervalSec": "[int(variables('vmDscSettings').RetryIntervalSec)]",                
                "ConfigurationMode": "ApplyAndAutoCorrect",
                "ConfigurationModeFrequencyMins": 15
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('ArtifactsLocationSasToken')]",
              "configurationArguments": {
                "LocalAdminCredential": {
                  "UserName": "[concat( parameters('adminUserName') )]",
                  "Password": "[parameters('adminPassword')]"
                },
                "InstallCredential": {
                  "UserName": "[concat(variables('vmDscSettings').domainNetbiosName, '\\user_a')]",
                  "Password": "[parameters('adminPassword')]"
                },
                "DomainAdminCredential": {
                  "UserName": "[concat(variables('vmDscSettings').domainNetbiosName, '\\', parameters('domainAdminUsername'))]",
                  "Password": "[parameters('adminPassword')]"
                }
              }
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "setupConfig" : 
    {
      "type" : "string",
      "value" : "[variables('setupConfig')]"
    }

  }
}