{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "group": "Template settings",
        "description": "The name of the administrator account of the new VMs and Domain"
      },
      "defaultValue": ""
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "group": "Template settings",
        "description": "The password for the administrator account of the new VMs and Domain"
      }
    },
    "ArtifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "ArtifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Template settings",
        "description": "The sasToken required to access ArtifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },   

    "DiskSizes": {
      "type": "string",     
      "allowedValues": [
        "Small-4GB",
        "Medium-20GB",
        "Large-50GB",        
        "Default"
      ],
      "metadata": {
        "group": "Template Settings",
        "description": "Builds virtual machine to T-Shirt size: Small: 1 Core, Medium:4 Core: Large: 8 Cores, Default: Attach individual disks for each drive letter and very costly"
      }
    },   
     
    "AutoShutdown": {
      "type": "string",     
      "allowedValues": [
        "1200",
        "1300",
        "1400",
        "1500",
        "1600",
        "1700",
        "1800",
        "1900",
        "2000"
      ],
      "metadata": {
        "group": "Template Settings",
        "description": "Daily Auto Shutdown time"
      }
    },       
    "ConfigData": {
      "type": "object",
      "metadata": {
        "group": "Domain Settings",
        "description": ""
      }
    }
  },
  "variables": {
    "templatePrefix": "master",
    "location": "[resourceGroup().location]",
    
    "domainAdmin": "[parameters('adminUserName')]",
   
    "fileShareSAAccount": "[concat('share', substring(replace(subscription().subscriptionId,'-', ''), 0, 19))]",
    "shareResourceGroupName": "TCShare",
    "fileShare": "share",    
    "RetryCount": 300,
    "RetryIntervalSec": 60,
    "storageAccountNamePrefix": "[concat(variables('templatePrefix'), uniqueString(resourceGroup().id))]",
    
    "ConfigData" :  "[parameters('ConfigData')]",

    "datadisks": [      
      {              
        "name": "DirectoryLogs",
        "diskSizeGB": 50,
        "letter": "E"              
      },
      {              
        "name": "FileShare",
        "diskSizeGB": 100,
        "letter": "F"              
      }
    ],    
    "DisksizeGB": {
      "Small-4GB": 4,
      "Medium-20GB": 20,
      "Large-50GB": 50
    }
    
  },
  "resources": [
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('ConfigData').Servers[copyIndex()].HostName]",
      "location": "[variables('location')]",
      "tags": {
        "Service": "Domain",
        "Site": "[ variables('ConfigData').Servers[copyIndex()].Site ]"
      },
      "copy": {
        "name": "vmLoop",
        "count": "[length(variables('ConfigData').Servers)]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('ConfigData').Servers[copyIndex()].vmSize]"
        },
        "osProfile": {
          "computerName": "[variables('ConfigData').Servers[copyIndex()].HostName]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true",
            "TimeZone": "Pacific Standard Time"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter-smalldisk",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('ConfigData').Servers[copyIndex()].HostName,'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {                 
              "storageAccountType": "Standard_LRS"
            }
          },         
          "copy": [
            {
              "name": "dataDisks",
              "count": "[if(not(equals(parameters('DiskSizes'), 'Default')), 1, length(variables('datadisks')) )]",
              "input": {
                "name": "[if(not(equals(parameters('DiskSizes'), 'Default')), concat(variables('ConfigData').Servers[copyIndex()].HostName, '_DataDisk'), concat(variables('ConfigData').Servers[copyIndex()].HostName,'_DataDisk_', variables('datadisks')[copyIndex('dataDisks')].letter, '_', replace(variables('datadisks')[copyIndex('dataDisks')].name,' ','_')) )]",
                "diskSizeGB": "[if(not(equals(parameters('DiskSizes'), 'Default')), 110, int(variables('datadisks')[copyIndex('dataDisks')].diskSizeGB))]",
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty",
                "managedDisk": {                 
                  "storageAccountType": "Standard_LRS"
                }
              }
            }
          ]          
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',  concat(   variables('templatePrefix'), '-' , variables('ConfigData').Servers[copyIndex()].HostName, '-nic'    )    )]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountNamePrefix'),'.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "[providers('Microsoft.DevTestLab','labs').apiVersions[0]]",
          "type": "microsoft.devtestlab/schedules",
          "name": "[concat('shutdown-computevm-', variables('ConfigData').Servers[copyIndex()].HostName )]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('ConfigData').Servers[copyIndex()].HostName )]"
          ],
          "properties": {
            "status": "Enabled",
            "taskType": "ComputeVmShutdownTask",
            "dailyRecurrence": {
             "time": "[parameters('AutoShutdown')]"
            },
            "timeZoneId": "Pacific Standard Time",
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 15
            },
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('ConfigData').Servers[copyIndex()].HostName)]"
          }
        },
        {
          "type": "extensions",
          "name": "Microsoft.Powershell.DSC",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('ConfigData').Servers[copyIndex()].HostName )]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.20",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": "[variables('ConfigData'). dcInstallModule]",
              
              "configurationArguments": {                
                "ConfigData"    : "[string(variables('ConfigData'))]",                
                "NodeName": "[variables('ConfigData').Servers[copyIndex()].HostName]",
                "Primary": "[variables('ConfigData').Servers[copyIndex()].Primary]",
                "FileShare": "[variables('ConfigData').Servers[copyIndex()].FileShare]",
                "site": "[toUpper(variables('ConfigData').Servers[copyIndex()].Site )]",
                
                "DiskSize": "[parameters('DiskSizes')]",
                "DisksizeGB": "50",
                "dataDisks": "[string(variables('datadisks'))]",                
                "SourcePath" : "[concat('\\\\', variables('fileShareSAAccount'), '.file.core.windows.net', '\\', 'share')]",

                "RetryCount": "[variables('RetryCount')]",
                "RetryIntervalSec": "[variables('RetryIntervalSec')]",                
                "ConfigurationMode" : "ApplyAndAutoCorrect",
                "ConfigurationModeFrequencyMins" : 15
                
              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('ArtifactsLocationSasToken')]",
              "configurationArguments": {
                "DomainAdminCredential": {
                  "UserName": "[concat(variables('ConfigData').DomainNetbiosName, '\\', variables('domainAdmin'))]",
                  "Password": "[parameters('adminPassword')]"
                },
                "AzureShareCredential": {
                  "UserName": "[concat('Azure', '\\', variables('fileShareSAAccount'))]",
                  "Password": "[listKeys(resourceId(variables('shareResourceGroupName'), 'Microsoft.Storage/storageAccounts', variables('fileShareSAAccount')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
                }
              }
            }
          }
        }
      ]
    }    
  ],
  "outputs": {}


}